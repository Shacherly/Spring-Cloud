#spring:
#  profiles:
#    active: euk1 ## 激活某个环境

spring:
  profiles:
    active: dev3
  application:
    name: EurekaServer-myself
#    boot:
#      admin:
#        client:
#          url: http://localhost:8080
#      security:
#        user:
#          name: admin
#          password: admin

  #关闭自我保护
eureka:
  server:
    enable-self-preservation: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always



---
spring:
  profiles: server1
server:
  port: 7001
eureka:
  client:
    service-url:
      defaultZone: http://60.188.58.167:7001/eureka/
    register-with-eureka: true # 自己注册自己，默认true，改为false，单节点自己不用注册自己
    fetch-registry: true # 从eureka server获取注册信息，单节点不需要同步其他节点数据，用false
  instance:
    hostname: 60.188.58.167
    ip-address: 60.188.58.167
    prefer-ip-address: true
    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}
---
spring:
  profiles: server2
server:
  port: 7002
eureka:
  client:
    service-url:
      defaultZone: http://60.188.58.167:7002/eureka/
    register-with-eureka: false # 自己注册自己，默认true，改为false，因为当前自己不用注册自己
    fetch-registry: true # 从eureka server获取注册信息，由于单节点，不需要同步其他节点数据，用false
  instance:
    hostname: 60.188.58.167
    ip-address: 60.188.58.167
    prefer-ip-address: true
    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}
---
spring:
  profiles: server3
server:
  port: 7003
eureka:
  client:
    service-url:
      defaultZone: http://60.188.58.167:7002/eureka/
    register-with-eureka: false # 自己注册自己，默认true，改为false，因为当前自己不用注册自己
    fetch-registry: true # 从eureka server获取注册信息，由于单节点，不需要同步其他节点数据，用false
  instance:
    hostname: 60.188.58.167
    ip-address: 60.188.58.167
    prefer-ip-address: true
    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}

################################## dev ####################################
################################## dev ####################################
################################## dev ####################################
---
spring:
  profiles: dev1
server:
  port: 7001
eureka:
  client:
    service-url:
      defaultZone: http://eureka2:7002/eureka/, http://eureka3:7003/eureka/
    register-with-eureka: true # 自己注册自己，默认true，改为false，因为当前自己不用注册自己
      # 自己注册自己可以测试看看自己的服务接口是hostname还是ip
  instance:
    hostname: eureka1
    ip-address: eureka1
    prefer-ip-address: false # 单机模拟高可用的注册中心需要把这个关掉，且需要使用hsotname，否则这个解析出来是同一个IP服务将不可用
    # 默认eureka.instance.instance-id 属性的配置是:
    # ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
    # 如果只是配置了eureka.instance.prefer-ip-address=true，不配置 eureka.instance.instance-id
    # 那还是显示 hostname，但 IP地址是可以访问的，因为IP始终都可以访问
    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}
---
spring:
  profiles: dev2
server:
  port: 7002
eureka:
  client:
    service-url:
      defaultZone: http://eureka1:7001/eureka/, http://eureka3:7003/eureka/
    register-with-eureka: true
  instance:
    hostname: eureka2
    ip-address: eureka2
    prefer-ip-address: false
    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}
---
spring:
  profiles: dev3
server:
  port: 7003
eureka:
  client:
    service-url:
      defaultZone: http://eureka1:7001/eureka/, http://eureka2:7002/eureka/
    register-with-eureka: true
  instance:
    hostname: eureka3
    ip-address: eureka3
    prefer-ip-address: false
    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}

